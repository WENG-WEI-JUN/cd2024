var tipuesearch = {"pages":[{"title":"About","text":"cmsimde 內容管理系統 倉儲: https://github.com/mdecycu/cmsimde_site 網站: https://mde.tw/cmsimde_site/ 簡報: https://mde.tw/cmsimde_site/reveal 網誌: https://mde.tw/cmsimde_site/blog","tags":"misc","url":"./pages/about/"},{"title":"2024 Spring 課程 w9","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引,協同產品設計實習的專案實習, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行. 使用 matplotlib 繪制 CoppeliaSim 鋼球平衡台控制過程 以下為利用 PID 控制 CoppeliaSim 鋼球平衡台場景 的 ZMQ RemoteAPI Python 程式, 請利用 Python 模組將系統控制過程, 鋼球在平衡台上的 x 方向座標與 y 方向, 利用 matplotlib 畫出來. \"這裡附上原本的 PID 控制程式碼\" 回答: 使用 matplotlib 繪制 CoppeliaSim 鋼球平 # 導入必要的庫 import zmq import numpy as np import matplotlib.pyplot as plt #... (你的 PID 控制代碼) ... #創建繪圖窗口和子圖 fig , ( ax1 , ax2 ) = plt . subplots ( 2 , 1 ) #設置標題 ax1 . set_title ( 'X 方向位置' ) ax2 . set_title ( 'Y 方向位置' ) #初始化數據列表 x_data = [] y_data = [] #控制循環 while True : # ... (你的 PID 控制邏輯) ... # 獲取鋼球的 x 和 y 坐標 _ , x_pos = vrep . simxGetObjectPosition ( clientID , ball_handle , - 1 , vrep . simx_opmode_blocking ) _ , y_pos = vrep . simxGetObjectPosition ( clientID , ball_handle , - 1 , vrep . simx_opmode_blocking ) # 將數據添加到列表中 x_data . append ( x_pos [ 0 ]) y_data . append ( y_pos [ 1 ]) # 更新繪圖 ax1 . plot ( x_data , 'b-' ) ax2 . plot ( y_data , 'r-' ) # 調整坐標軸範圍 ax1 . relim () ax2 . relim () ax1 . autoscale_view () ax2 . autoscale_view () # 暫停以顯示圖形 plt . pause ( 0.01 ) # 關閉連接 vrep . simxFinish ( clientID ) 衡台控制過程 解釋: 導入庫: 除了你的 PID 控制代碼所需的庫之外，我們還需要導入 matplotlib.pyplot 來繪制圖形。 創建繪圖窗口和子圖: 使用 plt.subplots(2, 1) 創建一個包含兩個子圖的繪圖窗口，分別用於繪制 x 和 y 方向的位置。 設置標題: 使用 ax.set_title() 設置每個子圖的標題。 初始化數據列表: 創建空列表 x_data 和 y_data，用於存儲鋼球的位置數據。 控制循環: 在你的 PID 控制邏輯中，添加以下步驟： 獲取鋼球坐標: 使用 vrep.simxGetObjectPosition() 獲取鋼球在 x 和 y 方向的位置。 添加數據到列表: 將獲取到的 x 和 y 坐標添加到 x_data 和 y_data 列表中。 更新繪圖: 使用 ax.plot() 繪制 x 和 y 方向的位置數據。 調整坐標軸範圍: 使用 ax.relim() 和 ax.autoscale_view() 調整坐標軸範圍，以適應不斷增加的數據。 暫停顯示圖形: 使用 plt.pause(0.01) 暫停程序 0.01 秒，以便顯示更新後的圖形。 關閉連接: 在控制循環結束後，使用 vrep.simxFinish() 關閉與 CoppeliaSim 的連接。 注意: 你需要將 ... (你的 PID 控制代碼) ... 替換為你實際的 PID 控制代碼。 你需要確保已經安裝了 matplotlib 庫。可以使用 pip install matplotlib 命令進行安裝。 其他選項: 你可以使用 plt.xlabel() 和 plt.ylabel() 設置坐標軸標簽。 你可以使用 plt.legend() 添加圖例。 你可以自定義圖形的外觀，例如線條顏色、樣式和標記。","tags":"w9","url":"./2120240418.html"},{"title":"2024 Spring 課程 w8","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引,錄製期中影片 期中影片 錄製 期中影片 ,介紹至目前的進度.","tags":"w8","url":"./2120240411.html"},{"title":"2024 Spring 課程 w7","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引,清明節放假 w1~w6統整 將w1~w6的內容統整,並檢查哪裡有錯誤的地方.","tags":"w7","url":"./2120240404.html"},{"title":"2024 Spring 課程 w6","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引,說明協同 NX 零組件繪圖以及 CoppeliaSim 場景模擬相關檔案格式. ODOO PLM 論文中英並列任務 每個組員都需要在其個人的 cd2024 倉儲中以 LaTeX 格式完成下列文章的英文與中文翻譯,最後組員需要在分組網站的 Release 或 downloads 區域完成製作 2b-midbgx_report.pdf 若您想在本地環境中使用可攜式程式編譯分組 LaTeX 報告，請下載以下兩個檔案： 1. miktex-portable.7z （大小約 167MB，解壓縮後約 1GB，需要密碼） 2.參考資料： latex_images_github.7z （需要密碼） 這兩個檔案將提供您在本地編譯 LaTeX 文件所需的環境和資源。 CoppeliaSim 檔案格式 請下載 copsim_midterm_cube2_xml.7z 檔案。 1.CoppeliaSim 目前提供二進位與 XML 格式的場景檔案。XML 格式的場景檔案支援單一檔案或多個模型與影像檔案的儲存。 2.從 4.5.1 版本開始，設定資料不再存儲在套件目錄中，而是存放在操作系統的 AppData/Roaming 目錄中。 3.在 4.5.1 版本時，儲存為多 XML 檔案格式時，無法帶出場景中的 png 圖檔，此一問題在 4.6.0 版本之後才得到修正。 4.目前僅修改至 4.5.1 版本的 CoppeliaSim 支援 IPv4 與 IPv6 網際場景模擬。 5.XML 格式的檔案具有廣泛的應用，協同產品設計過程可能需要使用程式方法來處理從零組件與模擬場景互相轉換取得的 XML 格式檔案。 ODOO, NX, Sourcetree, Github and Replit 建立協同產品開發環境的配置需要以下步驟： 1.下載 Siemens NX1872 軟體。cd2024 學生可以選擇在電腦上安裝 NX1872 或者從隨身碟中運行 NX1872。 2.下載 Sourcetree_portable.7z 。這需要密碼才能解壓縮。 3.下載其他工具，包括 CoppeliaSim、SciTE、Portablegit、Putty、Zoomit、Python、Solvespace和Process Explorer等。 4.下載 Solvespace_model_2d_for_cd2024_w6.7z 。 配置重點在於將 NX、Sourcetree 和 CoppeliaSim 的設定檔案與管理分組倉儲的權限存儲至可攜系統。並且需要從可攜系統啟動後的命令列中啟動這些應用程式。","tags":"w6","url":"./2120240328.html"},{"title":"2024 Spring 課程 w5","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引,教學內容為先前影片整理、分組網誌的統整. 影片整理 各組需要對教學影片進行整理並進行自我評估。具體步驟如下： 1.將字幕嵌入到影片上,並上傳到組別網站的平台上。 2.從影片字幕中整理出逐字稿,並以 .txt 格式提供連結，放置在影片下方。 3.在各嵌入的教學影片下方,以摘要方式說明該影片的教學重點。 4.進行自我評估,對教學影片的內容、呈現方式以及對觀眾的吸引力進行評估,並提出改進意見和建議。 如何統整組員子模組中的協同設計網誌 每位組員每週撰寫的協同設計網誌文章都會存放在個別的 cd2024 倉儲的 markdown 目錄中。只要修改分組倉儲中的 pelicanconf.py 檔案,使用 Pelican 設定中的 PATH 與 OUTPUT_PATH 變數,指定網誌統整目錄,就可以將所有組員在子模組中編寫的協同網誌納入分組倉儲中. 具體的設定操作是透過 pelicanconf.py 中的程式碼段,將子模組中 markdown 目錄中的 .md 檔案動態複製到分組倉儲中的 combined_directory,同時避開分組倉儲與組員子模組倉儲中 pages 目錄下的 .md 檔案。接著進行網誌轉檔,並將產生的網誌超文件存放到所設定的 blog 目錄中。完成設定後,執行網誌轉檔指令 pelican -s local_publishconf.py,利用 local_publishconf.py 的設定進行轉檔,同時將之前 pelicanconf.py 的設定也導入執行. 在這個過程中,每位組員必須在個別網誌 .md 檔案名稱前加上一串獨一無二的網誌 Slug 字串,例如：\"學號_\"，以避免檔案名稱衝突。此外,組員的 Category 欄位使用學號作為標示。這樣一來,在統整轉檔時,就不會發生相同網誌文章檔案名稱衝突的錯誤,而且可以從各分組網誌的 Categories 中找到每位組員所編寫的所有網誌內容. 利用 NX1872 協同繪製零組件 老師提供了一個 NX 套件的目錄檔案，其中包含了 NX1872 目錄。如果將這個 NX1872 目錄存入隨身碟中，可以使用下面的 start_USB_nx1872.bat 檔案來啟動 NX 軟體.(電腦輔助設計室中 C: 磁碟槽安裝了 NX1872, D: 磁碟槽則配置了 NX2206 與 NX12，需要確保在啟動 NX 軟體時選擇正確的目錄和版本)","tags":"w5","url":"./2120240321.html"},{"title":"2024 Spring 課程 w4","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引,在協同設計流程中,每個分組都需要明確定義任務需求和分工時序。隨著流程的進行,分組倉儲和網站的修改變得越來越複雜。為了讓各組員更清楚地看到倉儲的改版歷程以及本週的分組作業，導入 SourceTree 可以幫助團隊成員更輕鬆地管理和追蹤倉儲的修改,並更有效地協作. 分組任務 各組需要對教學影片進行整理並自我評估。這包括以下步驟： 1.在影片上添加字幕,並將其另存為可以嵌入到各組網站的格式。 2.從影片字幕中整理出逐字稿,並以 .txt 格式提供連結。 3.在各組嵌入的教學影片下方,提供影片的教學重點摘要。 這樣做可以更容易理解影片的內容，並提供方便的資源供參考。 Github 個人與分組倉儲的維護方式 各組成員的個人倉庫名稱為「cd2024」,而期中分組倉庫位於「mdecd2024」帳號下。分組倉庫的命名格式為以「2b」開頭，後接「-」,再加上「midag」以及組別號碼。每位組員的「cd2024」個人倉庫都必須被設定為相對應分組倉庫的子模組,這樣各組員便能夠獨立管理和維護自己的課程倉庫,同時可以自行決定是否要導入分組倉庫的內容版本。可使用以下四種方法之一進行操作：Replit、Codespaces、Gitpod 或本地主機（localhost）.","tags":"w4","url":"./2120240314.html"},{"title":"2024 Spring 課程 w3","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引,這一週的主要目標是有效地利用 Github Codespaces 與 Gitpod,並且將組員的倉儲設定為分組倉儲的子模組。同時也引入 LaTeX 轉換為 PDF 的機制,為期中分組報告的製作做好準備. 子模組 使用 Github Codespaces 建立與管理您的課程倉儲。在課程倉儲中,透過以下步驟將各組員的個人網站作為 submodule 納入分組倉儲： 1.首先,使用 git submodule add 命令將組員的個人網站作為 submodule 加入到您的分組倉儲中。例如：git submodule add <組員個人網站的 URL> <組員學號> 2.然後,執行 git add . 將變更加入暫存區。 3.接著,使用 git commit -m \"add 學號 submodule\" 提交變更。 4.最後,使用 git push 將變更推送到遠端倉儲中。 這樣一來,分組倉儲就會包含各組員的個人網站作為 submodule，並且能夠在 Github Codespaces 中方便地進行管理和編輯。 有關 Codespaces 使用 考慮到 Github Codespaces 免費帳戶每月只有 120 個小時的限制,使用者可以在需要時選擇在 Github 倉儲中編輯 Markdown 目錄中的網誌文章。當需要使用 Pelican 轉換檔案或編輯 config/content.htm 以及轉換靜態網頁內容時,才啟動 Codespaces。這樣可以最大程度地優化 Codespaces 免費核心小時的使用. 期中報告 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作.","tags":"w3","url":"./2120240307.html"},{"title":"2024 Spring 課程 w2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引，將使用 Github Classroom 進行協同分組。除了 Replit 之外，我們還將引導學員使用 Github Codespaces 來維護個人或分組的網站內容. 利用 Github Classroom 指定分組倉儲 在使用 Github Classroom 指定分組倉庫時，倉庫位於 mdecd2024 帳戶下。雖然每個組員對該分組倉庫有修改權限，但在將分組倉庫導入 Replit 時，由於倉庫擁有者是 mdecd2024，因此無法在 Replit 帳戶下進行授權。解決這個問題的方法是創建一個新的 Replit，點擊 \"Create a Repl\"，然後選擇 \"Import from GitHub\"，使用 \"From URL\" 將組別倉庫的連結輸入。然後選擇 Python 語言，點擊 \"Import from GitHub\" 來成功建立。接下來，您可以使用 ssh-keygen 命令在 .ssh 目錄下創建 id_rsa 和 id_rsa.pub。每個人都需要建立一個並將公鑰添加到其 GitHub 帳戶中。然後，您需要在 .ssh 目錄中創建 config 文件，將倉庫的 .git/config 中的 https 協議改為 SSH（git@github.com:your_account/cd2024.git）。通過這樣的配置，您可以在 Replit 中以 SSH 模式獲取對 GitHub 帳戶下特定倉庫的修改權限。但是，由於 Replit 的免費帳戶環境會不定期刪除 /home/runner/.ssh 目錄中的授權資料，因此如果要使用 Replit 維護從 GitHub Classroom 獲取授權的分組倉庫，就需要使用程式方法來配置 .ssh 中的 id_rsa 和 config 文件. 利用 Codespaces 維護倉儲與網站 安裝所需的 Python 模組使用 init_replit 指令。 動態指令： 1.使用 chmod u+x init_replit 設置權限。 2.執行 ./init_replit。 3.啟動程式，使用 Python3 main.py。 靜態指令： 1.使用 Python3 -m http.server。 推送指令： 1.加入所有變更，使用 git add .。 2.做出提交，使用 git commit -m \"新增: 你要推送的內容\"。 3.推送至遠端儲存庫，使用 git push。","tags":"w2","url":"./2120240229.html"},{"title":"2024 Spring 課程 w1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引，首先建立倉儲，再以Replit進行修改，接著在Replit建立網誌，記錄每周的進度，應用Odoo PLM管理機械設計流程. 創建個人課程倉儲 登入至自己的 GitHub 帳號後，點擊此連結[ https://github.com/mdecycu/cmsimde_site ]，或者在Teams中找到此連結。使用Template建立一個新倉儲，並命名為\"cd2024\"。在倉儲設定中的 pages 設定中，將 main 分支設為網頁根目錄，這樣網頁就能正常運行了. 將倉儲 import 至 Replit 在Replit帳號的設定中，找到Connected Services(連線服務)並連接GitHub，這樣就可以在Replit中進行改版，並且有權限將修改後的內容推回自己的網站. import 完如何進行改版 import完成後，動態網站就會顯示出來。點擊進入後，輸入\"admin\"就可以輕鬆增加或修改想要的內容，完成後，在右上角點擊\"Convert\"將內容轉為靜態。然後，在Replit的Git中提交新增的內容，然後Push，稍等片刻後，就可以在靜態網站上看到剛剛新增的內容. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2120240222.html"}]};